# ----------------------------------------
# Stage 1: Build environment and Composer dependencies
# ----------------------------------------
    FROM php:8.4-fpm AS builder

    # Install system dependencies and PHP extensions
    RUN apt-get update && apt-get install -y --no-install-recommends \
        curl \
        unzip \
        libpq-dev \
        libonig-dev \
        libssl-dev \
        libxml2-dev \
        libcurl4-openssl-dev \
        libicu-dev \
        libzip-dev \
        git \
        && docker-php-ext-install -j$(nproc) \
        pdo_mysql \
        pdo_pgsql \
        pgsql \
        opcache \
        intl \
        zip \
        bcmath \
        soap \
        && pecl install redis \
        && docker-php-ext-enable redis \
        && apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    
    # Install Composer globally
    RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
    
    # Set working directory
    WORKDIR /var/www
    
    # Copy Laravel app source code
    COPY ./backend /var/www
    
    # Remove conflicting environment files and keep only production env
    RUN rm -f /var/www/.env || true
    COPY .env.backend.test /var/www/.env
    
    # Create www-data user with shell and home directory
    RUN chown -R www-data:www-data /var/www
    
    # Switch to non-root user for safe Composer install
    USER www-data
    
    # Run Composer install with production flags
    RUN composer install --no-dev --optimize-autoloader --no-interaction --no-progress --prefer-dist
    
    # Switch back to root for copying to production stage
    USER root

    # ----------------------------------------
    # Stage 2: Development environment
    # ----------------------------------------
    FROM php:8.4-fpm AS development
    
    # Install only runtime libraries needed in development
    RUN apt-get update && apt-get install -y --no-install-recommends \
        libpq-dev \
        libicu-dev \
        libzip-dev \
        libfcgi-bin \
        procps \
        && apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
    
    # Health check script
    RUN curl -o /usr/local/bin/php-fpm-healthcheck \
        https://raw.githubusercontent.com/renatomefi/php-fpm-healthcheck/master/php-fpm-healthcheck \
        && chmod +x /usr/local/bin/php-fpm-healthcheck
    
    # Copy custom php.ini
    COPY ./docker/php-fpm/php.ini /usr/local/etc/php/conf.d/99-custom.ini
    
    # Copy PHP extensions, conf, and composer from builder
    COPY --from=builder /usr/local/lib/php/extensions/ /usr/local/lib/php/extensions/
    COPY --from=builder /usr/local/etc/php/conf.d/ /usr/local/etc/php/conf.d/
    COPY --from=builder /usr/local/bin/composer /usr/local/bin/composer
    
    # Enable PHP-FPM status page
    RUN sed -i '/\[www\]/a pm.status_path = /status' /usr/local/etc/php-fpm.d/zz-docker.conf
    
    # Copy app code and vendor from builder
    COPY --from=builder /var/www /var/www
    
    # Set working directory
    WORKDIR /var/www
    
    # Fix permissions
    RUN chown -R www-data:www-data /var/www
    
    # Run as non-root user
    USER www-data
    
    EXPOSE 9000
    CMD ["php-fpm"]
    